<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
				http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">
		
	<bean id="deptService" class="yaolei.aop.service.DeptServiceImpl"></bean>
	<bean id="empService" class="yaolei.aop.service.EmpServiceImpl"></bean>
	<bean id="myAspect" class="yaolei.aop.aspect.MyAspect"></bean>
	
	<aop:config>
		<aop:aspect id="aspect" ref="myAspect">
		
		
			<aop:pointcut expression="execution (* yaolei.aop.service.*.* (..))" id="myPointCut"/>
			<!-- 定义环绕通知 -->
			<aop:around pointcut-ref="myPointCut" method="aroundMethod"></aop:around>
			<!-- 定义前置通知 -->
			<aop:before pointcut-ref="myPointCut" method="beforeMethod"></aop:before>
			<!-- 定义最终通知 -->
			<aop:after pointcut-ref="myPointCut" method="afterMethod"></aop:after>
			<!-- 定义后置通知 -->
			<aop:after-returning  pointcut-ref="myPointCut" method="afterReturnMethod"  returning="retVal"></aop:after-returning>
		</aop:aspect>
	</aop:config>
</beans>



