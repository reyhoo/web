<?xml version="1.0" encoding="utf-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	 http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context.xsd
	 http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
	 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<array>
				<value>classpath:db.properties</value>
			</array>
		</property>
		<property name="ignoreResourceNotFound" value="true"></property>
	</bean>
	<bean id="simpleDataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="${database.driver}"></property>
		<property name="url" value="${database.url}"></property>
		<property name="username" value="${database.username}"></property>
		<property name="password" value="${database.password}"></property>
	</bean>
	<bean id="dbcpDataSource" class="org.apache.commons.dbcp.BasicDataSource"
	p:driverClassName="${database.driver}" p:url="${database.url}" p:username="${database.username}" p:password="${database.password}"
	>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dbcpDataSource"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	<!-- <bean id="roleMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="com.spring.mybatis.mapper.RoleMapper"></property>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
		sqlSessionFactory和sqlSessionTemplate都有，则会启用sqlSessionTemplate
		<property name="sqlSessionTemplate" ref="sqlSessionTemplate"></property>
	</bean> -->
	<!-- 如果mapper在多个包里，basePackage字段用逗号隔开。但是包里面可能会有其它类型IOC的组件，那么就用annotationClass指定你在类上标注的注释类的全限定名，
	或者使用下面的方法给所有的Mapper接口继承一个BaseMapper,然后用markerInterface指定它 -->
	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.spring.mybatis.mapper"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		<property name="annotationClass" value="org.springframework.stereotype.Repository"></property>
	</bean> -->
	<!--所有的Mapper接口继承一个BaseMapper,然后用markerInterface指定它  -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value='com.spring.mybatis.mapper'></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
		<property name="markerInterface" value="com.spring.mybatis.base.BaseMapper"></property>
	</bean>
</beans>