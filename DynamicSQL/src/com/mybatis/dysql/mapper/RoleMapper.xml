<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.dysql.mapper.RoleMapper">

	<resultMap type="role" id="roleMap">
		<id property="id" column="id" />
		<result property="roleName" column="role_name"></result>
		<result property="note" column="note"/>
	</resultMap>
	<!-- if  -->
	<sql id="cols">id,role_name,note</sql>
	<select id="getRoleByRoleName" resultMap="roleMap">
		select <include refid="cols"></include> from t_role where 1=1 
		<if test="roleName != null and roleName !='' ">
		and role_name like concat('%',#{roleName},'%')
		</if>
	</select>
	<!-- choose,when,otherwise -->
	<select id="getRoleByBean" parameterType="role" resultMap="roleMap">
		select <include refid="cols"></include> from t_role where 1=1 
		<choose>
			<when test="id != null and id > 0">
				and id=#{id}
			</when>
			<when test="roleName != null and roleName != ''">
				and role_name like concat('%',#{roleName},'%')
			</when>
			<otherwise>
				and note is not null
			</otherwise>
		</choose>
	</select>
	
	<!-- select 可以自动去掉多余的and或or -->
	<select id="findsRoles" resultMap="roleMap">
		select <include refid="cols"></include> from t_role
		<where> 
			<if test="roleName != null and roleName != ''">
				and role_name like concat('%',#{roleName},'%')
			</if>
			<if test="note != null and note != ''">
				or note like concat('%',#{note},'%')
			</if>
		</where>
	</select>
	
	
	<!-- trim跟where效果一样，前面加where，第一个项的'and|or'去掉    prefixOverrides如果是多个用'|'隔开-->
	<select id="findsRolesByTrim" resultMap="roleMap">
		select <include refid="cols"></include> from t_role
		<trim prefix="where" prefixOverrides="and|or">
			<if test="roleName != null and roleName != ''">
				and role_name like concat('%',#{roleName},'%')
			</if>
			<if test="note != null and note != ''">
				or note like concat('%',#{note},'%')
			</if>
		</trim>
	</select>
	
	<!-- set 当某一字段为空时，去掉对应sql-->
	<update id="updateRole" parameterType="role">
		update t_role
		<set>
			<if test="roleName != null and roleName != ''">
				role_name=#{roleName},
			</if>
			<if test="note != null and note != ''">
				note=#{note}
			</if>
		</set>
		where id=#{id}
	</update>
	
	<!-- trim用作set时的用法 ,前面加set，最后一个项的','去掉-->
	<update id="updateRoleByTrim" parameterType="role">
		update t_role
		<trim prefix="set" suffixOverrides=",">
			<if test="roleName != null and roleName != ''">
				role_name=#{roleName},
			</if>
			<if test="note != null and note != ''">
				note=#{note}
			</if>
		</trim>
		where id=#{id}
	</update>
	<update id="updateUser" parameterType="user">
		update t_user
		<trim prefix="set" suffixOverrides=",">
			<if test="userName != null and userName != ''">
				user_name=#{userName},
			</if>
			<if test="realName != null and realName != ''">
				real_name=#{realName},
			</if>
			<if test="sex != null">
				sex=#{sex,typeHandler=com.mybatis.dysql.handler.SexEnumTypeHandler},
			</if>
			<if test="mobile != null and mobile != ''">
				mobile=#{mobile},
			</if>
			<if test="email != null and email != ''">
				email=#{email},
			</if>
			<if test="note != null and note != ''">
				note=#{note},
			</if>
		</trim>
		where id=#{id}
	</update>
	
	
	<!-- foreach的用法 ，item是对象时-->
	<select id="findRolesByList" resultMap="roleMap" parameterType="role">
		select <include refid="cols"></include> from t_role
		where id in
		<foreach collection="roleList" item="roleBean" index="index" 
		open="(" separator="," close=")"
		>
		#{roleBean.id}
		</foreach>
	</select>
		<!-- foreach的用法 ，item是基础类型时-->
	<select id="findRolesByIdList" resultMap="roleMap" parameterType="long">
		select <include refid="cols"></include> from t_role
		where id in
		<foreach collection="idList" item="id" index="index" 
		open="(" separator="," close=")"
		>
		#{id}
		</foreach>
	</select>
	
	
	<!-- bind 定义上下文变量 -->
	<select id="findRolesByBind" resultMap="roleMap">
		select <include refid="cols"></include> from t_role
		<trim prefix="where" prefixOverrides="and|or">
			<if test="roleName != null and roleName != ''">
				<bind name="pattern_roleName" value="'%' + roleName + '%'"/>
				and role_name like #{pattern_roleName}
			</if>
			<if test="note != null and note != ''">
				<bind name="pattern_note" value="'%' + note + '%'"/>
				and note like #{pattern_note}
			</if>
		</trim>
	</select>
</mapper>