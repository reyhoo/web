<?xml version="1.0" encoding="utf-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	 http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.0.xsd
	 http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
	 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	 http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	 http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig" p:maxIdle="50"
	    p:maxTotal="100" p:maxWaitMillis="20000"></bean>
	<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
	    <property name="hostName" value="localhost"></property><!-- 默认为localhost -->
	    <property name="port" value="6379"></property><!-- 默认为6379 -->
	   <!--  <property name="password" value="password"></property> -->
	   <property name="poolConfig" ref="poolConfig"></property>
	</bean>
	
	<bean id="jdkSerializationRedisSerializer" class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"></bean>
	<bean id="stringRedisSerializer" class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
	    <property name="connectionFactory" ref="connectionFactory"></property>
	    <property name="keySerializer" ref="stringRedisSerializer"></property>
	    <property name="valueSerializer" ref="jdkSerializationRedisSerializer"></property>
	</bean>
	
	<bean id="strRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
	    <property name="connectionFactory" ref="connectionFactory"></property>
	    <property name="keySerializer" ref="stringRedisSerializer"></property>
	    <property name="valueSerializer" ref="stringRedisSerializer"></property>
	</bean>
	
	
	<bean id="hashRedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
	    <property name="connectionFactory" ref="connectionFactory"></property>
	    <property name="keySerializer" ref="stringRedisSerializer"></property>
	    <property name="defaultSerializer" ref="stringRedisSerializer"></property>
	    <property name="valueSerializer" ref="stringRedisSerializer"></property>
	</bean>
	
	
	<bean id="redisMsgListener" class="com.spring.redis.listener.RedisMessageListener">
	    <property name="redisTemplate" ref="hashRedisTemplate"></property>
	</bean>
	
	<bean id="topicContainer" destroy-method="destroy" class="org.springframework.data.redis.listener.RedisMessageListenerContainer">
	    <!-- Redis连接工厂 -->
	    <property name="connectionFactory" ref="connectionFactory"></property>
	    <!-- 连接池，这里只要线程池生存，才能继续监听 -->
	    <property name="taskExecutor">
	        <bean class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler">
	            <property name="poolSize" value="3"></property>
	        </bean>
	    </property>
	    <property name="messageListeners">
	        <!-- 消息监听map -->
	        <map>
	             <!-- 配置监听者，key-ref和bean id定义一致 -->
	            <entry key-ref="redisMsgListener">
	                <bean class="org.springframework.data.redis.listener.ChannelTopic">
	                    <constructor-arg value="chat"></constructor-arg>
	                </bean>
	            </entry>
	            <entry key-ref="redisMsgListener">
	                <bean class="org.springframework.data.redis.listener.ChannelTopic">
	                    <constructor-arg value="change"></constructor-arg>
	                </bean>
	            </entry>
	        </map>
	    </property>
	</bean>
</beans>